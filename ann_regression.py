# -*- coding: utf-8 -*-
"""ann_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cz8RougL_pIXUTCBQB2kF9GvEEb7UKjC
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x
import tensorflow as tf
tf.__version__

import numpy as np

N=1000
X = np.random.random([N,2])*6-3
Y = np.cos(2*X[:,0])+np.cos(3*X[:,1])

import matplotlib.pyplot as plt
fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
ax.scatter(X[:,0],X[:,1],Y)

model = tf.keras.models.Sequential([
                                    tf.keras.layers.Dense(units=128, input_shape=(2,), activation='relu'),
                                    tf.keras.layers.Dense(1)
])

opt = tf.keras.optimizers.Adam(0.01)
model.compile(optimizer=opt, loss='mae')
r = model.fit(X,Y,epochs=100)

plt.plot(r.history['loss'],label='loss')

fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
ax.scatter(X[:,0],X[:,1],Y)

line = np.linspace(-3,3,50)
xx, yy = np.meshgrid(line,line)
Xgrid = np.vstack((xx.flatten(),yy.flatten())).T
Yhat = model.predict(Xgrid).flatten()
ax.plot_trisurf(Xgrid[:,0],Xgrid[:,1],Yhat, linewidth=0.2, antialiased=True)
plt.show()