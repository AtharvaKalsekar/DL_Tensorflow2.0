# -*- coding: utf-8 -*-
"""SimpleRNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w--ttwZZChy0L63h2Ynla6dYQhvwnZr0
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x
import tensorflow as tf
print(tf.__version__)

from tensorflow.keras.layers import Input, Dense, SimpleRNN
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.models import Model

import numpy as np
import matplotlib.pyplot as plt

series = np.sin(0.1*np.arange(200)) # + np.random.randn(200)*0.1

plt.plot(series)
plt.show()

T = 10
X = []
Y = []
D = 1

for t in range(len(series)-T):
  x = series[t:t+T]
  X.append(x)
  y = series[t+T]
  Y.append(y)

X = np.array(X).reshape(-1,T,D)
Y = np.array(Y)
N = len(X)

print("X.shape",X.shape,"Y.shape",Y.shape)

i = Input(shape=(T,1))
x = SimpleRNN(5)(i) #default activation is tanh
x = Dense(1)(x)

model = Model(i,x)

model.compile(loss='mae', optimizer=Adam(0.01))

r = model.fit(X[:-N//2],Y[:-N//2],epochs=80, validation_data=(X[-N//2:],Y[-N//2:]))

plt.plot(r.history['loss'],label='loss')
plt.plot(r.history['val_loss'],label='val_loss')
plt.legend()

#wrong forecast
validation_target = Y[-N//2:]
validation_pred = []

i = -N//2

while len(validation_pred)<len(validation_target):
  p = model.predict(X[i].reshape(1,-1,1))[0,0]
  i+=1
  validation_pred.append(p)

plt.plot(validation_target, label = 'target')
plt.plot(validation_pred, label = 'preds')
plt.legend()

#correctt forecast
validation_target = Y[-N//2:]
validation_pred = []

last_x = X[-N//2]

while len(validation_pred)<len(validation_target):
  p = model.predict(last_x.reshape(1,-1,1))[0,0]
  validation_pred.append(p)
  last_x = np.roll(last_x,-1)
  last_x[-1]=p

plt.plot(validation_target, label = 'target')
plt.plot(validation_pred, label = 'preds')
plt.legend()